@using Donor_System.Models
@model User
@{
    ViewBag.Title = "Create";
}

<div class="breadcrumb-bg w3l-inner-page-breadcrumb py-5" style="height:50px ; ">

    <h2 class="title pt-5">Add User</h2>
    <ul class="breadcrumbs-custom-path mt-3 text-center" style="height:50px">
        <li><a href="@Url.Action("Index","Home")">Home</a></li>
        <li class="active"><span class="fa fa-arrow-right mx-2" aria-hidden="true"></span> Add User </li>
    </ul>

</div>

<div class="position-relative">
    <div class="shape overflow-hidden">
        <svg viewBox="0 0 2880 48" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M0 48H1437.5H2880V0H2160C1442.5 52 720 0 720 0H0V48Z" fill="currentColor"></path>
        </svg>
    </div>
</div>



<div class="container py-lg-5 py-md-4 py-2">

    <div class="w3ls-heading">
        <h3>@ViewBag.Title</h3>
    </div>
    <div class="row" style="padding-left:100px">
        @using (Html.BeginForm("Create", "Users", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

            if (TempData.ContainsKey("UserCreationSuccess"))
            {
                <div class="alert alert-success" id="notification">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    @TempData["UserCreationSuccess"]
                </div>
            }
            else if (TempData.ContainsKey("UserCreationError"))
            {
                <div class="alert alert-success" id="notification">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    @TempData["UserCreationError"]
                </div>
            }
            <hr class="hr" />



            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                <div class="col-md-10">
                    <p>Email</p>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @style = "width:300px" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    <p>Role</p>
                    @Html.DropDownListFor(m => m.Role,
                   new SelectList(Enum.GetValues(typeof(RoleEnum))),
                   "Select Role", new { @class = "form-control", @style = "width:300px" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <p>Name</p>
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" ,@style ="width:300px"})
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-10">
                    <p>Password</p>
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", @style = "width:300px" })
                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    <input type="submit" value="Add User" class="btn btn-primary" style="width:300px"/>
                </div>
            </div>


        }
    </div>
</div>

